#Die Standartroute auslesen
WANIP=$(route -n | grep UG | grep 0.0.0.0 | tr -s " "| cut -d" " -f2 | head -n 1)
#Und den 1. Block
IP1=$(echo $WANIP | cut -d "." -f1)
#und den 2. auslesen
IP2=$(echo $WANIP | cut -d "." -f2)
INTERNET=false
#Wenn Standardroute des Routers aus dem Freifunknetz kommt, INTERNET=false, ansonsten eben true....
if [ "$IP1" != "172" ] && [ "$IP2" != "16" ] ; then
	INTERNET=true;
fi

#Falls ueberhaupt keine Standartroute (Standalone-Router). Sonstuerde er nach oberer Ueberpruefung Internet=true haben...
if [ "$IP1" = "" ] && [ "$IP2" = "" ] ; then
	killall openvpn				
        INTERNET=false;
fi

# Ueberpruefen, ob wir einen Namenserver eingetragen haben (Internet/VPN wichtig!!)
NAMESERVER=$(cat /tmp/resolv.conf.ppp | grep nameserver)
if [ "$NAMESERVER" ]
	then
        	echo "Nameserver eingetragen."
        else
        	# Wenn nicht, entsprechend 4 DNS-Server eintragen (OpenNIC)
                echo "nameserver 217.79.186.148" >> /tmp/resolv.conf.ppp
                echo "nameserver 58.6.115.42" >> /tmp/resolv.conf.ppp
                echo "nameserver 202.83.95.227" >> /tmp/resolv.conf.ppp
                echo "nameserver 119.31.230.42" >> /tmp/resolv.conf.ppp
        fi

#Falls eigener Internetanschluss vorhanden.....
if [ "$INTERNET" = true ]
	then

		#Wenn Router Internet hat, wird eine VPN-Verbindung aufgebaut. Da die Router (warumauchimmer) dann manchmal nach lÃ¤ngerer Laufzeit
		#instabil werden, gibts nen Cronjob, der Sie einfach um 4 Uhr nachts neustartet
		RESTART=$(cat /etc/crontabs/root | grep /sbin/reboot)
		if [ "$RESTART" ]
			then
	        		echo "Restart als Cronjob bereits eingetragen."
	                else
	        	        # Wenn nicht, entsprechend den Cronjob eintragen)
               	                echo "0 4 * * * 	/sbin/reboot" >> /etc/crontabs/root
                        fi
		#Ueberpruefen, ob der VPN-Server auf seiner internen IP erreichbar ist
		ping -c 1 10.26.0.1
		#Wenn nicht....
		if test $? = 1 
			then
				#VPN neu aufbauen
				killall openvpn 
				sleep 5
				/usr/sbin/openvpn --config /etc/openvpn/client.conf
	                        #Standardregeln fuers VPN
				iptables -I INPUT -i tap0 -j ACCEPT
	                        iptables -I OUTPUT -o tap0 -j ACCEPT
	                        iptables -I FORWARD -i tap0 -j ACCEPT
	                        iptables -I FORWARD -o tap0 -j ACCEPT

				#Internes IP-Interface auslesen & Subnetzmaske
				IP=$(ifconfig br-lan |grep Bcast |cut -d: -f2 |cut -d" " -f1)/$(ifconfig br-lan |grep Bcast |cut -d: -f4 |cut -d" " -f1)
                                #Wenn die interne=der WANIP ist(z.B. Fonera 2100 hat nur 1 Ethernetbuchse fuer WAN ODER LAN) 
                                if [ "$IP" != "$WANIP" ]; then
                                	iptables -t nat -I POSTROUTING -s $IP -j MASQUERADE
				fi
			
                                #Jetzt wird das ganze noch fuers WLAN gemacht:
	                        #Falls WL0 existiert(Broadcom), entsprechend DHCP-Wlan auslesen
                                IP=$(ifconfig wl0:1 |grep Bcast |cut -d: -f2 |cut -d" " -f1)
                                if [ "$IP" ]
 	                               then
 	                               #Wenn wl0:1 existiert hat, das Interface inclusive Subnetzmaske auslesen
         	                              IP=$(ifconfig wl0:1 |grep Bcast |cut -d: -f2 |cut -d" " -f1)/$(ifconfig wl0:1 |grep Bcast | cut -d: -f4 |cut -d" " -f1)
                                       #ansonsten eben das ATH-Interface (Atheros)
                                       else
                                              IP=$(ifconfig ath0:1 |grep Bcast |cut -d: -f2 |cut -d" " -f1)/$(ifconfig ath0:1 |grep Bcast | cut -d: -f4 |cut -d" " -f1)
                                       fi
                                iptables -t nat -I POSTROUTING -s $IP -j MASQUERADE

				#Ueberpruefen, ob der VPN-Eintrag in der OLSR-Config existiert...
		                VPN=$(cat /var/etc/olsrd.conf  | grep tap0)
        		        if [ "$VPN" ]
                		       then
                        		        echo "OLSR korrekt konfiguriert. Keine Aktion."
                        		else
                                                #falls nicht entsprechend die Config erweitern
                                                echo "Interface \"tap0\"" >> /var/etc/olsrd.conf
                                                echo "{" >> /var/etc/olsrd.conf
                                                echo "HelloInterval           50.0" >> /var/etc/olsrd.conf
                                                echo "HelloValidityTime       150.0" >> /var/etc/olsrd.conf
                                                echo "TcInterval              30.0" >> /var/etc/olsrd.conf
                                                echo "TcValidityTime          90.0" >> /var/etc/olsrd.conf
                                                echo "MidInterval             150.0" >> /var/etc/olsrd.conf
                                                echo "MidValidityTime         450.0" >> /var/etc/olsrd.conf
                                                echo "HnaInterval             150.0" >> /var/etc/olsrd.conf
                                                echo "HnaValidityTime         450.0" >> /var/etc/olsrd.conf
                                                #echo "Ip4Broadcast           255.255.255.255" >> /var/etc/olsrd.conf
                                                #echo "LinkQualityMult        10.26.0.1 0.5" >> /var/etc/olsrd.conf
                                                echo "Weight                  30" >> /var/etc/olsrd.conf
                                                echo "}" >> /var/etc/olsrd.conf
                        		fi
				sleep 10
                                killall olsrd
                                sleep 5
				#und den OLSR-Daemon mit der neuen Config starten
                                /usr/sbin/olsrd -f /var/etc/olsrd.conf -nofork &
			fi
	fi
exit 0

